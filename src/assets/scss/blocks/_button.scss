@use '../abstracts/' as *;

.btn {
  --btn-vertical-space: #{calc(map-get($size-scale, s0) * 1.5)};
  --btn-horizontal-space: #{calc(map-get($size-scale, s0) * 2.5)};
  --btn-position-right: #{toRem(24px)};
  --btn-position-bottom: #{toRem(66px)};
  --btn-font-size: #{calc(map-get($size-scale, s0) * 1.125)};
  --btn-bg-color: var(--neutral-color-3);
  --btn-text-color: var(--dark-color-1);
  --btn-bg-active-color: var(--neutral-color-5);
  --btn-text-active-color: var(--neutral-color-3);

  display: inline-flex;
  justify-content: center;
  align-items: center;
  padding: var(--btn-vertical-space) var(--btn-horizontal-space);
  background-color: var(--btn-bg-color);
  color: var(--btn-text-color);
  font-weight: var(--font-weight-extra-bold);
  font-size: var(--btn-font-size);
  line-height: 1.2;
  transition: background-color 0.35s ease-in-out,
              color 0.35s ease-in-out;
  cursor: pointer;

  &:hover,
  &:focus,
  &.active {
    background-color: var(--btn-bg-active-color);
    color: var(--btn-text-active-color);
  }

  &[data-variant="primary"] {
    --btn-bg-color: var(--red-color-1);
    --btn-text-color: var(--neutral-color-1);
    --btn-bg-active-color: var(--red-color-2);
    --btn-text-active-color: var(--neutral-color-1);
  }

  &[data-variant="secondary"] {
    --btn-bg-color: var(--dark-color-4);
    --btn-text-color: var(--neutral-color-1);
    --btn-bg-active-color: var(--dark-color-3);
    --btn-text-active-color: var(--neutral-color-1);
  }

  &[data-variant="link"] {
    --btn-horizontal-space: 0;
    --btn-bg-color: transparent;
    --btn-text-color: var(--red-color-1);
    --btn-bg-active-color: transparent;
    --btn-text-active-color: var(--red-color-2);

    span {
      display: inline-block;
      border-bottom: 2px solid var(--btn-text-color);
    }

    &:hover,
    &:focus,
    &.active {
      span {
        border-bottom: 2px solid var(--btn-text-active-color);
      }
    }
  }

  &[data-variant="burger"],
  &[data-variant="rounded-prev"],
  &[data-variant="rounded-next"],
  &[data-variant="rounded-top"] {
    mask-position: center center;
    mask-repeat: no-repeat;
    mask-size: contain;
  }

  &[data-variant="burger"] {
    width: toRem(24px);
    height: toRem(24px);
    padding: var(--space-s0);
    background-color: var(--dark-color-5-opacity-50);
    mask-image: url('assets/images/shared/icon-hamburger.svg');

    &[aria-expanded="true"] {
      mask-image: url('assets/images/shared/icon-cross.svg');
    }
  }

  &[data-variant="rounded-prev"],
  &[data-variant="rounded-next"],
  &[data-variant="rounded-top"] {
    width: toRem(40px);
    height: toRem(40px);
    padding: 0;
    background-color: var(--red-color-1);

    &:hover,
    &:focus,
    &.active {
      background-color: var(--red-color-2);
    }
  }

  &[data-variant="rounded-prev"] {
    mask-image: url('assets/images/shared/icon-arrow-previous.svg');
  }

  &[data-variant="rounded-next"],
  &[data-variant="rounded-top"] {
    mask-image: url('assets/images/shared/icon-arrow-next.svg');
  }

  &[data-variant="rounded-top"] {
    position: fixed;
    right: var(--btn-position-right);
    bottom: var(--btn-position-bottom);
    display: none;
    background-color: var(--dark-color-2);
    transform-origin: center;
    transform: rotate(-90deg);
    z-index: map-get($zindexes, sticky);

    &:hover,
    &:focus,
    &.active {
      background-color: var(--dark-color-2);
    }
  }

  @include media-breakpoint(md) {
    --btn-vertical-space: #{calc(map-get($size-scale, s0) * 1.25)};
    --btn-horizontal-space: #{calc(map-get($size-scale, s0) * 1.125)};
    --btn-font-size: #{map-get($size-scale, s0)};

    &[data-variant="rounded-top"] {
      display: inline-flex;
    }
  }

  @include media-breakpoint(xl) {
    --btn-vertical-space: #{calc(map-get($size-scale, s0) * 1.5)};
    --btn-horizontal-space: #{calc(map-get($size-scale, s0) * 2.5)};
    --btn-position-right: #{toRem(32px)};
    --btn-position-bottom: #{toRem(116px)};
    --btn-font-size: #{calc(map-get($size-scale, s0) * 1.125)};
  }
}
